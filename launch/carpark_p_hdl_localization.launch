<?xml version="1.0"?>
<launch>
  <!-- arguments -->

  <param name="/use_sim_time" value="true" />

  <arg name="nodelet_manager" default="velodyne_nodelet_manager" />
  <arg name="points_topic" default="/velodyne_points" />
  <arg name="imu_topic" default="/imu/data" />
  <arg name="odom_child_frame_id" default="velodyne" />

  <arg name="model" default="$(find hdl_localization)/urdf/ev_bot.urdf"/>
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- in case you use velodyne_driver, comment out the following line -->
  <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/>

    <!-- globalmap_server_nodelet -->
    <node pkg="nodelet" type="nodelet" name="globalmap_server_nodelet" args="load hdl_localization/GlobalmapServerNodelet $(arg nodelet_manager)">
      <param name="globalmap_pcd" value="$(find hdl_localization)/data/Transformed_finalCloud.pcd" />
      <!--param name="globalmap_pcd" value="$(find hdl_localization)/data/Transformed_finalCloud(big).pcd" /-->
      <param name="downsample_resolution" value="0.3" />  <!-- 0.1, 0.4 -->
    </node>

    <!-- hdl_localization_nodelet -->
    <node pkg="nodelet" type="nodelet" name="hdl_localization_nodelet" args="load hdl_localization/HdlLocalizationNodelet $(arg nodelet_manager)">
        <remap from="/velodyne_points" to="$(arg points_topic)" />
        <remap from="/gpsimu_driver/imu_data" to="$(arg imu_topic)" />
        <!-- odometry frame_id -->
        <param name="odom_child_frame_id" value="$(arg odom_child_frame_id)" />
        <!-- imu settings -->
        <!-- during "cool_time", imu inputs are ignored -->
        <param name="use_imu" value="true" />
        <param name="invert_imu" value="true" />
        <param name="cool_time_duration" value="2.0" />
        <!-- ndt settings -->
        <!-- if NDT is slow for your PC, try DIRECT1 serach method, which is a bit unstable but extremely fast -->
        <param name="ndt_neighbor_search_method" value="DIRECT7" />
        <param name="ndt_resolution" value="2.5" /> <!-- increased for better localization accuracy -->
        <param name="downsample_resolution" value="0.4" /> <!-- 0.1, 0.3 -->
        <!-- if "specify_init_pose" is true, pose estimator will be initialized with the following params -->
        <!-- otherwise, you need to input an initial pose with "2D Pose Estimate" on rviz" -->
       <param name="specify_init_pose" value="true" />
        <param name="init_pos_x" value="-8.0" /> <!-- 24.0, 60, 60, 8.0 -->
        <param name="init_pos_y" value="1.0" /> <!-- 0.0, -50, -65.0, 5.0 -->
        <param name="init_pos_z" value="0.0" /> <!-- 0.0, -2.5, -2.0, 0.0 -->
        <param name="init_ori_w" value="0.993" /> <!-- 1.0, 0.707, 0.819, 0.174 -->
        <param name="init_ori_x" value="0.0" /> <!-- 0.0, 0.0, 0.0, 0.0 -->
        <param name="init_ori_y" value="0.0" /> <!-- 0.0, 0.0, 0.0, 0.0 -->
        <param name="init_ori_z" value="0.122" /> <!-- 0.0, -0.707, -0.574, 0.985 -->
	<!-- 75, -115, -4.0, 0.383, 0.0, 0.0, -0.924 -->
    </node>
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hdl_localization)/rviz/hdl_localization.rviz" />

</launch>
